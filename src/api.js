import Chance from 'chance';
import random from 'lodash.random';

/**
 * Do not edit this file.
 */
class MessageGenerator {
  constructor(options) {
    console.log('MessageGenerator');
    this.messageCallback = options.messageCallback;
    this.stopGeneration = false;
    this.chance = new Chance();
  }

  stop() {
    this.stopGeneration = true;
  }

  start() {
    this.stopGeneration = false;
    this.generate();
  }

  isStarted() {
    return !this.stopGeneration;
  }

  isStopped() {
    return this.stopGeneration;
  }

  /**
   * priority from 1 to 3, 1 = error, 2 = warning, 3 = info
   */
  async generate() {
    if (this.isStopped()) {
      clearTimeout(this.generator);
      return;
    }
    // const message = this.chance.sentence({ words: random(3, 12) });
    const message = (
      await (
        await fetch(`http://hipsum.co/api/?type=hipster-centric&sentences=1`)
      ).json()
    )[0];
    const id = this.chance.guid();
    const priority = random(1, 4);
    this.messageCallback({
      message,
      priority,
      id,
    });
    this.generator = setTimeout(() => {
      console.log('generatingâ€¦')
      this.generate();
    }, random(1, 6) * 500);
  }
}

export default MessageGenerator;
